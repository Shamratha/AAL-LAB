#include <stdio.h>
#include <stdlib.h>

#define MAX 100


int graph[MAX][MAX]; 
int visited[MAX];
int topoOrder[MAX];
int n, index = 0;


void dfs(int v) {
    visited[v] = 1;

    for (int i = 0; i < n; i++) {
        if (graph[v][i] && !visited[i]) {
            dfs(i);
        }
    }

   
    topoOrder[index--] = v;
}

void topologicalSort() {
    index = n - 1; 
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            dfs(i);
        }
    }

    printf("Topological Sort Order:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", topoOrder[i]);
    }
    printf("\n");
}

int main() {
    int edges, u, v;

    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter number of edges: ");
    scanf("%d", &edges);

   
    for (int i = 0; i < n; i++) {
        visited[i] = 0;
        for (int j = 0; j < n; j++) {
            graph[i][j] = 0;
        }
    }

   
    printf("Enter edges (from to):\n");
    for (int i = 0; i < edges; i++) {
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
    }

   
    topologicalSort();

    return 0;
}
